#!/usr/bin/env bash

export SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )/..
export _GREEN=$(tput setaf 2)
export _YELLOW=$(tput setaf 3)
export _MAGENTA=$(tput setaf 5)
export _CYAN=$(tput setaf 6)
export _RED=$(tput setaf 1)
export _BOLD=$(tput bold)
export _RESET=$(tput sgr0)

if [[ ! -f "$SCRIPT_DIR/../.setx" ]]; then
  
   echo "." > $SCRIPT_DIR/../.setx

   set -e

   rm -rf $SCRIPT_DIR/../.setx
else

  set -e

fi

if [[ ! -f "$SCRIPT_DIR/../.aurun" ]]; then
  
   echo "." > $SCRIPT_DIR/../.aurun

   pj scripts autoupdate

   rm -rf $SCRIPT_DIR/../.aurun

fi

resolve_link() {
  $(type -p greadlink readlink | head -1) "$1"
}

abs_dirname() {
  local cwd="$(pwd)"
  local path="$1"

  while [ -n "$path" ]; do
    cd "${path%/*}"
    local name="${path##*/}"
    path="$(resolve_link "$name" || true)"
  done

  pwd
  cd "$cwd"
}

libexec_path="$(abs_dirname "$0")"
export _PJ_ROOT="$(abs_dirname "$libexec_path")"

commands=($@)

counter=0

for (( i=0; i<=${#commands[@]}; i++ ))
do

  if [ "${commands[$i]}" != "" ] && [[ "${commands[$i]}" != -* ]]; then

    counter=`expr $counter + 1`

  fi

done

path_builder="$_PJ_ROOT/libexec"
command_builder=""
prev_command=""
_SUB_COMMAND_IS="false"
is_help_command="false"
is_just_help_command="false"
help_command_path="$_PJ_ROOT/libexec"
help_command_path_dir="$_PJ_ROOT/libexec"
help_command_path_dir_only="false"
help_command=""
is_commands_command="false"

for (( i=0; i < $counter; i++ ))
do

  islastarg=`expr $counter - $i`

  if [ $i -eq 0 ] && [ "${commands[$i]}" == "commands" ]; then

    is_commands_command="true"

  fi

  if [ "$is_help_command" == "false" ]; then

    if [ -f "$path_builder/pj-${commands[$i]}" ]; then

      prev_command=$command_builder

      command_builder="pj-${commands[$i]}"

      _SUB_COMMAND_IS="true"

    fi

  fi

  if [ -d "$path_builder/pj-${commands[$i]}" ] && [ "$is_help_command" == "false" ] && [ "$is_commands_command" == "false" ]; then

    path_builder="$path_builder/pj-${commands[$i]}"

    _SUB_COMMAND_IS="false"

  fi

  if [ $i -gt 0 ] && [ "$is_help_command"  == "true" ] && [ "$is_commands_command" == "false" ]; then


    if [ -d "$help_command_path_dir/pj-${commands[$i]}" ]; then

      help_command_path_dir="$help_command_path_dir/pj-${commands[$i]}"
      help_command="pj-${commands[$i]}"
      help_command_path_dir_only="true"

    elif [ -f "$help_command_path_dir/pj-${commands[$i]}" ] && [ "$is_commands_command" == "false" ]; then

      help_command_path="$help_command_path_dir/pj-${commands[$i]}"  
      help_command_path_dir_only="false"    

    fi

  fi

  if [ $i -gt 0 ] && [ "$is_help_command"  == "false" ] && [ "$is_commands_command" == "true" ]; then

    if [ -d "$help_command_path_dir/pj-${commands[$i]}" ]; then

      help_command_path_dir="$help_command_path_dir/pj-${commands[$i]}"
      help_command="pj-${commands[$i]}"
      help_command_path_dir_only="true"

    elif [ -f "$help_command_path_dir/pj-${commands[$i]}" ] && [ "$is_commands_command" == "true" ]; then

      help_command_path="$help_command_path_dir/pj-${commands[$i]}"  
      help_command_path_dir_only="false"    

    fi

  fi

  if [ $i -eq 0 ] && [ "${commands[$i]}" == "help" ]; then

    is_help_command="true"

  fi

  if [ $counter -eq 1 ] && [ $i -eq 0 ] && [ "${commands[$i]}" == "help" ]; then

    is_just_help_command="true"

  fi


done

flags=""
flags_on="false"
for (( i=0; i<=${#commands[@]}; i++ ))
do
  if [[ "${commands[$i]}" == -* ]] || [ "$flags_on" == "true" ]; then
    flags="$flags${commands[$i]} "
    flags_on="true"
  fi
done

if [ "$command_builder" == "pj-help" ]; then

  path_builder="$_PJ_ROOT/libexec"

fi

export _SUB_COMMAND_ROOT="$path_builder"
export _SUB_COMMAND_FILE="$command_builder"
export _SUB_COMMAND_VARS="$@"
export _SUB_COMMAND_IS="$_SUB_COMMAND_IS"
export _SUB_COMMAND_HELP="$help_command_path"
export _SUB_COMMAND_JUST_HELP="$is_just_help_command"
export _SUB_COMMAND_HELP_DIR="$help_command_path_dir"
export _SUB_COMMAND_HELP_DIR_ONLY="$help_command_path_dir_only"
export _SUB_COMMAND_HELP_DIR_ONLY_FILE="$help_command"

if [ -d "$_SUB_COMMAND_ROOT" ]; then
  export PATH="${libexec_path}:$_SUB_COMMAND_ROOT:$PATH"
else
  export PATH="${libexec_path}:$PATH"
fi

command="$1"
if [ "$command" == "" ] || [ "$command" == "-h" ] || [ "$command" == "-help" ]; then
  exec pj-help
  exit
elif [ "$command" == "help" ] || [ "$command" == "commands" ]; then
  command_path="$(command -v "pj-$command" || true)"
else
  command_path="$(command -v "$command_builder" || true)"
fi

if [ -f "$path_builder/$command_builder" ]; then
  
  shift

  if [ "$flags" == "" ]; then
    exec "$command_path" "$@"
  else
    exec "$command_path" $flags
  fi

else

  echo
  echo " -> ${_MAGENTA}pj${_RESET}: ${_YELLOW}no such command \`$command'${_RESET}" >&2
  echo
    
  exit 1

fi